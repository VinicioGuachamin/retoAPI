// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using retoAPI;

#nullable disable

namespace retoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231222152443_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("retoAPI.Models.Dependiente", b =>
                {
                    b.Property<int>("CodigoDependiente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoDependiente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentescoId")
                        .HasColumnType("int");

                    b.HasKey("CodigoDependiente");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("ParentescoId");

                    b.ToTable("Dependientes");
                });

            modelBuilder.Entity("retoAPI.Models.Empleado", b =>
                {
                    b.Property<int>("CodigoEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoEmpleado"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoImpuestoRenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroDependientes")
                        .HasColumnType("int");

                    b.Property<bool?>("PagaImpuestoRenta")
                        .HasColumnType("bit");

                    b.Property<int>("PuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalarioFijo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodigoEmpleado");

                    b.HasIndex("PuestoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("retoAPI.Models.Parentesco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parentescos");
                });

            modelBuilder.Entity("retoAPI.Models.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombrePuesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("retoAPI.Models.Dependiente", b =>
                {
                    b.HasOne("retoAPI.Models.Empleado", "Empleado")
                        .WithMany("Dependientes")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("retoAPI.Models.Parentesco", "Parentesco")
                        .WithMany("Dependientes")
                        .HasForeignKey("ParentescoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Parentesco");
                });

            modelBuilder.Entity("retoAPI.Models.Empleado", b =>
                {
                    b.HasOne("retoAPI.Models.Puesto", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("retoAPI.Models.Empleado", b =>
                {
                    b.Navigation("Dependientes");
                });

            modelBuilder.Entity("retoAPI.Models.Parentesco", b =>
                {
                    b.Navigation("Dependientes");
                });

            modelBuilder.Entity("retoAPI.Models.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
